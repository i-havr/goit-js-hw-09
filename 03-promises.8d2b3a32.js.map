{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,MAAO,QACPC,SAAU,YACVC,aAAa,IAGfN,EAAAE,OAAOK,MAAM,CACXC,SAAS,IAGX,MAAMC,EAAO,CACXC,aAAcC,SAASC,cAAc,kBACrCC,UAAWF,SAASC,cAAc,UAG9BE,EAAW,GAwBjB,SAASC,EAAcV,EAAUW,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEb,E,MAAUW,IAEpBG,EAAO,C,SAAEd,E,MAAUW,GAAQ,GAE5BA,EAAM,G,CAIb,SAASQ,GAAcnB,SAAEA,EAAQW,MAAEA,IACjChB,EAAAE,OAAOuB,QAAQ,uBAAqBpB,QAAiBW,M,CAGvD,SAASU,GAAcrB,SAAEA,EAAQW,MAAEA,IACjChB,EAAAE,OAAOyB,QAAQ,sBAAoBtB,QAAeW,M,CAzCpDP,EAAKI,UAAUe,iBAAiB,UAQhC,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAaC,OAAOlB,EAASE,OAC7BiB,EAAOD,OAAOlB,EAASmB,MACvBC,EAASF,OAAOlB,EAASoB,QAE/B,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAGnCpB,EAAcoB,EAFAJ,EAAaE,GAAQE,EAAI,IAEfC,KAAKZ,GAAea,MAAMX,E,KAjBtDjB,EAAKI,UAAUe,iBAAiB,SAEhC,SAAqBC,GAEnB,OADAf,EAASe,EAAMS,OAAOC,MAAQV,EAAMS,OAAOE,MACpC1B,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '250px',\n  position: 'right-top',\n  closeButton: false,\n});\n\nNotify.merge({\n  useIcon: false,\n});\n\nconst refs = {\n  submitBtnRef: document.querySelector('.form > button'),\n  formInput: document.querySelector('.form'),\n};\n\nconst formData = {};\n\nrefs.formInput.addEventListener('submit', onFormSubmit);\nrefs.formInput.addEventListener('input', onFormInput);\n\nfunction onFormInput(event) {\n  formData[event.target.name] = event.target.value;\n  return formData;\n}\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n\n  const firstDelay = Number(formData.delay);\n  const step = Number(formData.step);\n  const amount = Number(formData.amount);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const delay = firstDelay + step * (i - 1);\n\n    createPromise(i, delay).then(notifySuccess).catch(notifyFailure);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction notifySuccess({ position, delay }) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n}\n\nfunction notifyFailure({ position, delay }) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","width","position","closeButton","merge","useIcon","$47d4ff9957288465$var$refs","submitBtnRef","document","querySelector","formInput","$47d4ff9957288465$var$formData","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$notifySuccess","success","$47d4ff9957288465$var$notifyFailure","failure","addEventListener","event","preventDefault","firstDelay","Number","step","amount","i","then","catch","target","name","value"],"version":3,"file":"03-promises.8d2b3a32.js.map"}